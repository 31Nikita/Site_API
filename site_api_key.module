<?php
/**
 * Implements hook_form_alter().
 */
use Drupal\node\NodeInterface;
use Symfony\Component\HttpFoundation\JsonResponse;
use Drupal\Core\Form\FormStateInterface;

function site_api_key_form_alter(&$form, &$form_state, $form_id)
{

    // Add Site API Key field to 'Site Information' section
    if ($form_id == 'system_site_information_settings')
    {
        $form['site_api'] = [
          '#type' => 'details',
          '#title' => t('Site API section') ,
          '#open' => true,
        ];
        $config = \Drupal::service('config.factory')->getEditable('system.site');

        $form['site_api']['site_api_key'] = [
          '#type' => 'textfield',
          '#title' => t('Site API key') ,
          '#default_value' => $config->get('site_api_key') ? $config->get('site_api_key') : NULL,
          '#size' => 40,
          '#description' => t('Enter the key') ];
        // Change form submit button text to 'Update configuration'
        $site_api_key = $config->get('site_api_key');
        if (!empty($site_api_key))
        {
            $form['actions']['submit']['#value'] = t('Update configuration');
        }
        // Extra submit handler to save/update site_api_key
        $form['#submit'][] = 'site_api_key_submit';
    } 
}

function site_api_key_submit(array & $form, FormStateInterface $form_state)
{
    $site_api_key = NULL;
    // Update the site information variable "site_api_key"
    $config = \Drupal::service('config.factory')->getEditable('system.site');
    $site_api_key = $form_state->getValue('site_api_key');
    if ($site_api_key)
    {

        $config->set('site_api_key', $site_api_key)->save();
        // Show message that Site API Key has been updated.
        drupal_set_message("Site API key to " . $site_api_key . " has been updated successfully.");
    }
    else
    {
        drupal_set_message("No site API key has been set");
        $config->set('site_api_key', $site_api_key)->save();

    }
}